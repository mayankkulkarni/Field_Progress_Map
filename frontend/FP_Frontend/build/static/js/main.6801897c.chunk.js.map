{"version":3,"sources":["Components/Map/style.js","Components/Map/controls.js","Components/Map/Map.js","Components/Form/VoterInputForms.js","Components/SidePane/SidePane.js","Components/NavBarComponent/NavBarComponent.js","App.js","serviceWorker.js","index.js"],"names":["layerControl","borderRadius","boxShadow","fontFamily","fontSize","lineHeight","width","position","top","right","padding","zIndex","background","SCATTERPLOT_CONTROLS","radiusScale","displayName","type","value","step","min","max","LayerControls","settingName","newValue","this","props","settings","newSettings","onChange","title","propTypes","className","style","Object","keys","map","key","display","float","propType","_onValueChange","bind","Component","Setting","Checkbox","id","checked","e","target","Slider","Number","COLOR_SCALE","scaleThreshold","domain","range","initialViewState","latitude","longitude","zoom","pitch","bearing","geoJsonData","Map","state","hover","x","y","hoveredObject","reduce","accu","points","_onHover","object","properties","setState","geometry","coordinates","_processData","console","log","left","pointerEvents","color","cluster","Name","Address","data","ScatterplotLayer","getPosition","d","getColor","getRadius","opacity","pickable","radiusMinPixels","radiusMaxPixels","onHover","GeoJsonLayer","Precinct","stroked","filled","extruded","lineWidthScale","lineWidthMinPixels","getFillColor","getLineColor","getLineWidth","getElevation","_updateLayerSettings","layers","_renderLayers","views","MapView","height","clear","controller","reuseMaps","mapStyle","preventStyleDiffing","mapboxApiAccessToken","_renderTooltip","React","VoterInputForms","Card","marginBottom","Body","Form","Label","Control","nameChange","name","availabilityChange","availability","SidePane","volunteers","volunteerName","addVolunteerHandler","push","nameChangeHandler","event","availabilityChangeHandler","sendData","axios","get","then","response","forms","volunteer","index","Button","variant","onClick","PrecinctData","features","NavBarComponent","PrecinctIDs","componentDidMount","getPrecinctIDs","IDs","code","Navbar","bg","marginRight","click","Group","controlId","marginLeft","as","placeholder","App","showPane","menuHandler","paneBoolean","Boolean","window","location","hostname","match","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6801897c.chunk.js","sourcesContent":["export const layerControl = {\n    borderRadius: 3,\n    boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n    fontFamily:\n      'ff-clan-web-pro, \"Helvetica Neue\", Helvetica, sans-serif !important',\n    fontSize: '12px',\n    lineHeight: 1.833,\n    width: 200,\n    position: 'absolute',\n    top: '7.2%',\n    right: '20px',\n    padding: '20px',\n    zIndex: 100,\n    background: 'white'\n};","import React, { Component } from 'react';\nimport { layerControl } from './style';\n\nexport const SCATTERPLOT_CONTROLS = {\n    radiusScale: {\n      displayName: 'Scatterplot Radius',\n      type: 'range',\n      value: 5,\n      step: 1,\n      min: 0,\n      max: 10\n    },\n    // showScatterplot: {\n    //   displayName: 'Show Scatterplot',\n    //   type: 'boolean',\n    //   value: false\n    // }\n};\n\nexport class LayerControls extends Component {\n\n    _onValueChange(settingName, newValue) {\n      const { settings } = this.props;\n      // Only update if we have a confirmed change\n      if (settings[settingName] !== newValue) {\n        // Create a new object so that shallow-equal detects a change\n        const newSettings = {\n          ...this.props.settings,\n          [settingName]: newValue\n        };\n  \n        this.props.onChange(newSettings);\n      }\n    }\n  \n    render() {\n      const { title, settings, propTypes = {} } = this.props;\n  \n      return (\n        <div className=\"layer-controls\" style={layerControl}>\n          {title && <h4>{title}</h4>}\n          {Object.keys(settings).map(key => (\n            <div key={key}>\n              <label>{propTypes[key].displayName}</label>\n              <div style={{ display: 'inline-block', float: 'right' }}>\n                {settings[key]}\n              </div>\n              <Setting\n                settingName={key}\n                value={settings[key]}\n                propType={propTypes[key]}\n                onChange={this._onValueChange.bind(this)}\n              />\n            </div>\n          ))}\n        </div>\n      );\n    }\n}\n\nconst Setting = props => {\n    const { propType } = props;\n    if (propType && propType.type) {\n      switch (propType.type) {\n        case 'range':\n          return <Slider {...props} />;\n  \n        case 'boolean':\n          return <Checkbox {...props} />;\n        default:\n          return <input {...props} />;\n      }\n    }\n};\n\nconst Checkbox = ({ settingName, value, onChange }) => {\n    return (\n      <div key={settingName}>\n        <div className=\"input-group\">\n          <input\n            type=\"checkbox\"\n            id={settingName}\n            checked={value}\n            onChange={e => onChange(settingName, e.target.checked)}\n          />\n        </div>\n      </div>\n    );\n  };\n  \n  const Slider = ({ settingName, value, propType, onChange }) => {\n    const { max = 100 } = propType;\n  \n    return (\n      <div key={settingName}>\n        <div className=\"input-group\">\n          <div>\n            <input\n              type=\"range\"\n              id={settingName}\n              min={0}\n              max={max}\n              step={max / 100}\n              value={value}\n              onChange={e => onChange(settingName, Number(e.target.value))}\n            />\n          </div>\n        </div>\n      </div>\n    );\n};","import React from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {LineLayer, GeoJsonLayer, ScatterplotLayer, PolygonLayer} from '@deck.gl/layers';\nimport {StaticMap} from \"react-map-gl\";\nimport ReactMapGL from \"react-map-gl\";\nimport {MapView, View} from '@deck.gl/core';\nimport {scaleThreshold} from 'd3-scale';     // github example\nimport \"./Map.css\"\nimport { LayerControls, SCATTERPLOT_CONTROLS } from './controls';\nimport Precinct from '../../precinct.json'\n\n\nconst MAPBOX_ACCESS_TOKEN= 'pk.eyJ1IjoidWJhY2hyaXMiLCJhIjoiY2sxYjczdWhpMGZuMzNjb2I5OGlqb3gwaCJ9.iLrtxaVXfhsJM0iyWwdQ5Q'\nconst mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n\n// Information from the github deckGL geoGSON example \nconst DATA_URL = 'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/geojson/vancouver-blocks.json'; // eslint-disable-line\n\nexport const COLOR_SCALE = scaleThreshold()\n  .domain([-0.6, -0.45, -0.3, -0.15, 0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05, 1.2])\n  .range([\n    [65, 182, 196],\n    [127, 205, 187],\n    [199, 233, 180],\n    [237, 248, 177],\n    // zero\n    [255, 255, 204],\n    [255, 237, 160],\n    [254, 217, 118],\n    [254, 178, 76],\n    [253, 141, 60],\n    [252, 78, 42],\n    [227, 26, 28],\n    [189, 0, 38],\n    [128, 0, 38]\n  ]);\n\n// end of info \n\nconst initialViewState = {\n    // latitude: 49.254,\n    // longitude: -123.13,\n    latitude: 32.92,   //SAN DIEGO\n    longitude: -117.135,\n    zoom: 14,\n    pitch: 0,\n    bearing: 0\n};\n\n\n// console.log(precinctData)\n\nconst geoJsonData = {\"type\": \"FeatureCollection\", \"features\": [\n  {\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.131861, 32.920173]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 3, \"Address\": \"8990 BRENTFORD AVE\", \"Name\": \"Lavinnia  Sweigart\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133607, 32.920137]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 4, \"Address\": \"8880 BRENTFORD AVE\", \"Name\": \"Mercedese Irmgard Thero\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.132555, 32.920159]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8950 BRENTFORD AVE\", \"Name\": \"Denkevitz  Rener\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.132507, 32.920452]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8969 LIBRA DR\", \"Name\": \"Assent  Gantvoort\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.132834, 32.920445]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8953 LIBRA DR\", \"Name\": \"Keuna  Malmgren\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.13517, 32.920105]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 0, \"Address\": \"8776 BRENTFORD AVE\", \"Name\": \"Jimyah  Wokwicz\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133653, 32.920426]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 4, \"Address\": \"8921 LIBRA DR\", \"Name\": \"Cannette  Mahalick\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.134128, 32.920126]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 2, \"Address\": \"8850 BRENTFORD AVE\", \"Name\": \"Liliya  Rallison\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.13267, 32.920449]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8961 LIBRA DR\", \"Name\": \"Fugate  Standerwick\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133607, 32.920137]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 4, \"Address\": \"8880 BRENTFORD AVE\", \"Name\": \"Yeicob  Domingues\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.135138, 32.920393]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 0, \"Address\": \"8777 LIBRA DR\", \"Name\": \"Nayya  Drouillard\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.134475, 32.920407]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 5, \"Address\": \"8845 LIBRA DR\", \"Name\": \"Tammeka  Piazza\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133953, 32.920131]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 2, \"Address\": \"8860 BRENTFORD AVE\", \"Name\": \"Quintoria  Reigle\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.135002, 32.920108]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 0, \"Address\": \"8786 BRENTFORD AVE\", \"Name\": \"D\\u017eemila  Denny\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.13267, 32.920449]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8961 LIBRA DR\", \"Name\": \"Erlon  Willison\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133256, 32.920144]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 6, \"Address\": \"8910 BRENTFORD AVE\", \"Name\": \"Vedvit  Swerdlow\", \"zipcode\": 130960}}\n  ]}\n\nconst tooltipStyle = {\n  position: 'absolute',\n  padding: '4px',\n  background: 'rgba(0, 0, 0, 0.8)',\n  color: '#fff',\n  maxWidth: '300px',\n  fontSize: '10px',\n  zIndex: 9,\n  pointerEvents: 'none'\n};\n\n\nclass Map extends React.Component {\n\n    state = {\n      hover: {\n        x:0,\n        y:0,\n        hoveredObject: null\n      },\n      settings: Object.keys(SCATTERPLOT_CONTROLS).reduce(\n        (accu, key) => ({\n          ...accu,\n          [key]: SCATTERPLOT_CONTROLS[key].value\n        }),\n        {}\n      ),\n      points: [],\n    }\n\n    componentDidMount() {\n      this._processData();\n    }\n\n    _processData() {\n      const points = geoJsonData.features;\n      console.log(points);\n      this.setState({points})\n    }\n\n    _onHover = ({ x, y, object }) => {\n      const properties = object ? object.properties : null;\n      \n      if(object){\n        this.setState({\n          hover: { \n           x: object.geometry.coordinates[0],\n           y: object.geometry.coordinates[1],\n           hoveredObject: properties\n          } \n       });\n      }\n      \n    }\n\n    _renderTooltip(left) {\n      const {hover} = this.state\n      return hover.hoveredObject && (\n        <div style={{position: 'absolute',\n         zIndex: 1, \n         pointerEvents: 'none',\n         padding: '8px',\n         background: 'rgba(0, 0, 0, 0.8)',\n         color: '#fff', \n         fontSize: '15px',\n         left: left, top: \"7.3%\"}}>\n          <div>\n              <b>Cluster</b>\n              </div>\n              <div>\n                <div>{hover.hoveredObject.cluster}</div>\n              </div>\n              <div>\n                <b>Name</b>\n              </div>\n              <div>{hover.hoveredObject.Name}</div>\n              <div>\n                <b>Location</b>\n              </div>\n              <div>{hover.hoveredObject.Address}</div>\n        </div>\n      );\n    }\n\n    _updateLayerSettings(settings){\n      this.setState({settings});\n    }\n\n\n    _renderLayers() {\n      const data = this.state.points;\n      const settings = this.state.settings\n      \n\n      return [\n        new ScatterplotLayer({\n          id: 'scatterplot',\n          getPosition: d => d.geometry.coordinates,\n          getColor: d => COLOR_SCALE(d.properties.cluster),\n          getRadius: d => 5,\n          opacity: 0.9,\n          pickable: true,\n          radiusMinPixels: 0.25,\n          radiusMaxPixels: 30,\n          data,\n          onHover: this._onHover,\n          ...settings\n        }),\n        new GeoJsonLayer({\n          id: 'geojson-layer',\n          data: Precinct,\n          opacity: 0.1,\n          pickable: false,\n          stroked: false,\n          filled: true,\n          extruded: true,\n          lineWidthScale: 200,\n          lineWidthMinPixels: 2,\n          getFillColor: [160, 160, 180, 200],\n          getLineColor: [127, 205, 187],\n          getRadius: 100,\n          getLineWidth: 100,\n          getElevation: 30,\n          // onHover: this._onHover\n        }),\n      ];\n    }\n\n    render() {\n      let left = \"0%\"\n      if(this.props.display === false){\n        left = \"20%\"\n      }\n      const {hover} = this.state\n      console.log(hover)\n      console.log(hover.hoveredObject);\n    \n        return (   \n          <>\n            <LayerControls\n            settings={this.state.settings}\n            propTypes={SCATTERPLOT_CONTROLS}\n            onChange={settings => this._updateLayerSettings(settings)}\n            />\n            <DeckGL\n            layers={this._renderLayers()}\n            initialViewState={initialViewState}\n            style={{top:\"7.3%\", left:left}}\n            views={ new MapView({\n                height: '100%',\n                width: '100%',\n                clear: true,\n                controller: true\n            })}\n            >\n              <StaticMap\n              style={{top:\"7.3%\", left:left}}\n              reuseMaps\n              mapStyle={mapStyle}\n              preventStyleDiffing={true}\n              mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n              />\n              { this._renderTooltip(left) }\n            </DeckGL>\n          </>\n\n          );\n    }\n}\n\nexport default Map;","import React from \"react\";\nimport {Form, Card} from 'react-bootstrap/';\n\nclass VoterInputForms extends React.Component {\n\n    render() {\n        return (\n            <>\n                <Card style={{ width: '12rem', marginBottom: '20px' }}>\n                    <Card.Body>\n                        <Form>\n                            <div>\n                                <Form.Label>Volunteer Name</Form.Label>\n                                <Form.Control type=\"text\" \n                                onChange= {this.props.nameChange}\n                                value={this.props.name}/>\n                            </div>\n                            <div>\n                                <Form.Label>Availability</Form.Label>\n                                <Form.Control type=\"text\" \n                                onChange= {this.props.availabilityChange}\n                                value={this.props.availability}/>\n                            </div>\n                        </Form>\n                    </Card.Body>\n                </Card>\n\n            </>\n            \n        )\n    }\n}\n\nexport default VoterInputForms;","import React from 'react';\nimport \"./SidePane.css\";\nimport VoterInputForms from \"../Form/VoterInputForms\";\nimport {Button} from 'react-bootstrap/';\nimport axios from 'axios';\n\n\n\nclass SidePane extends React.Component {\n\n  state= {\n    volunteers: [\n      {volunteerName: '', availability: ''}\n    ]\n  }\n\n  // pass data up to parent component\n  componentDidUpdate() {\n\n  }\n\n  addVolunteerHandler= () => {\n\n    let volunteers = [...this.state.volunteers]\n    const newVolunteer = {volunteerName: '', availability: ''}\n    volunteers.push(newVolunteer)\n    this.setState({volunteers: volunteers})\n  }\n\n  nameChangeHandler= (event, id) => {\n    let volunteers = [...this.state.volunteers]\n    volunteers[id].volunteerName= event.target.value\n    this.setState({volunteers: volunteers})\n  }\n\n  availabilityChangeHandler= (event, id) => {\n    let volunteers = [...this.state.volunteers]\n    volunteers[id].availability= event.target.value\n    this.setState({volunteers: volunteers})\n\n  }\n\n  sendData= () => {\n    const volunteers = this.state.volunteers\n    axios.get('http://localhost:8000/api/results/')\n          .then( response => {\n            console.log(response);\n          })\n  }\n\n  render(){\n\n    const forms = this.state.volunteers.map( (volunteer, index) => {\n      return <VoterInputForms\n       name={volunteer.volunteerName}\n       availability= {volunteer.availability}\n       key={index}\n       nameChange= {(event)=> this.nameChangeHandler(event, index)}\n       availabilityChange= {(event) => this.availabilityChangeHandler(event, index)}\n       />\n    })\n\n    return (\n      <div className=\"Pane\"> \n        <div className=\"Form-Container\">\n          {forms}\n        </div>\n        <Button\n          variant=\"light\"\n         className=\"Run-Button2\"  \n         onClick={this.addVolunteerHandler}\n         >\n           Add Volunteer\n          </Button>\n        <Button className=\"Run-Button\" \n        variant=\"light\"\n        onClick={this.sendData}>\n          Cut Turf\n        </Button>\n      </div>\n    )\n  }\n}\n\n\nexport default SidePane; ","import React from \"react\";\nimport {Button, Navbar, Form} from 'react-bootstrap/';\nimport Precinct from '../../precinct.json';\n\nconst PrecinctData= [...Precinct.features]\nconsole.log(PrecinctData)\n\nclass NavBarComponent extends React.Component {\n\n  state= {\n    PrecinctIDs: []\n  }\n\n  componentDidMount= () => {\n    this.getPrecinctIDs(PrecinctData);\n  }\n\n  getPrecinctIDs= (data) => {\n\n    const IDs = data.map( object => object.properties.code)\n    console.log(IDs);\n    this.setState({PrecinctIDs: IDs})\n  }\n\n  render() {\n\n    return (\n\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Button variant=\"light\" \n          style= {{marginRight: \"10px\"}}\n          onClick={this.props.click}\n          >Toggle Input</Button>\n          <Form.Group controlId=\"formGridState\" style= {{marginBottom: \"0px\", marginLeft: \"500px\"}}>\n            <Form.Control as=\"select\" placeholder=\"State\">\n              <option>Select Precinct...</option>\n              {\n                this.state.PrecinctIDs.map((id, index) => {\n                  return <option key={index}>{id}</option>\n                })\n              }\n            </Form.Control>\n          </Form.Group>\n        </Navbar>\n    );\n  }\n}\nexport default NavBarComponent","import React from 'react';\nimport './App.css';\n// import mapboxgl from \"mapbox-gl\";\n// import ReactMapGL from \"react-map-gl\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Map from \"./Components/Map/Map\"\nimport SidePane from './Components/SidePane/SidePane';\nimport NavBarComponent from './Components/NavBarComponent/NavBarComponent';\n\nclass App extends React.Component {\n\n  state={\n    showPane: false\n  }\n  \n\n  menuHandler= () => {\n    let paneBoolean = this.state.showPane\n    this.setState({showPane: !paneBoolean})\n  }\n\n  render(){\n    let pane = null\n    \n    \n\n    return (  \n      <div>\n        <div>\n          <NavBarComponent click= {this.menuHandler}/>\n        </div>\n        <div>\n          <SidePane />\n        </div>\n        <div>\n          <Map display={this.state.showPane}/>          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\naxios.defaults.baseURL= ''\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}