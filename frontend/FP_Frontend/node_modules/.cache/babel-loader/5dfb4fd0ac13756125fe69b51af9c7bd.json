{"ast":null,"code":"import _defineProperty from\"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import{layerControl}from'./style';export var SCATTERPLOT_CONTROLS={radiusScale:{displayName:'Scatterplot Radius',type:'range',value:5,step:1,min:0,max:10}// showScatterplot: {\n//   displayName: 'Show Scatterplot',\n//   type: 'boolean',\n//   value: false\n// }\n};export var LayerControls=/*#__PURE__*/function(_Component){_inherits(LayerControls,_Component);function LayerControls(){_classCallCheck(this,LayerControls);return _possibleConstructorReturn(this,_getPrototypeOf(LayerControls).apply(this,arguments));}_createClass(LayerControls,[{key:\"_onValueChange\",value:function _onValueChange(settingName,newValue){var settings=this.props.settings;// Only update if we have a confirmed change\nif(settings[settingName]!==newValue){// Create a new object so that shallow-equal detects a change\nvar newSettings=_objectSpread({},this.props.settings,_defineProperty({},settingName,newValue));this.props.onChange(newSettings);}}},{key:\"render\",value:function render(){var _this=this;var _this$props=this.props,title=_this$props.title,settings=_this$props.settings,_this$props$propTypes=_this$props.propTypes,propTypes=_this$props$propTypes===void 0?{}:_this$props$propTypes;return React.createElement(\"div\",{className:\"layer-controls\",style:layerControl},title&&React.createElement(\"h4\",null,title),Object.keys(settings).map(function(key){return React.createElement(\"div\",{key:key},React.createElement(\"label\",null,propTypes[key].displayName),React.createElement(\"div\",{style:{display:'inline-block',float:'right'}},settings[key]),React.createElement(Setting,{settingName:key,value:settings[key],propType:propTypes[key],onChange:_this._onValueChange.bind(_this)}));}));}}]);return LayerControls;}(Component);var Setting=function Setting(props){var propType=props.propType;if(propType&&propType.type){switch(propType.type){case'range':return React.createElement(Slider,props);case'boolean':return React.createElement(Checkbox,props);default:return React.createElement(\"input\",props);}}};var Checkbox=function Checkbox(_ref){var settingName=_ref.settingName,value=_ref.value,_onChange=_ref.onChange;return React.createElement(\"div\",{key:settingName},React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"input\",{type:\"checkbox\",id:settingName,checked:value,onChange:function onChange(e){return _onChange(settingName,e.target.checked);}})));};var Slider=function Slider(_ref2){var settingName=_ref2.settingName,value=_ref2.value,propType=_ref2.propType,_onChange2=_ref2.onChange;var _propType$max=propType.max,max=_propType$max===void 0?100:_propType$max;return React.createElement(\"div\",{key:settingName},React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"div\",null,React.createElement(\"input\",{type:\"range\",id:settingName,min:0,max:max,step:max/100,value:value,onChange:function onChange(e){return _onChange2(settingName,Number(e.target.value));}}))));};","map":{"version":3,"sources":["/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/src/Components/Map/controls.js"],"names":["React","Component","layerControl","SCATTERPLOT_CONTROLS","radiusScale","displayName","type","value","step","min","max","LayerControls","settingName","newValue","settings","props","newSettings","onChange","title","propTypes","Object","keys","map","key","display","float","_onValueChange","bind","Setting","propType","Checkbox","e","target","checked","Slider","Number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { layerControl } from './style';\n\nexport const SCATTERPLOT_CONTROLS = {\n    radiusScale: {\n      displayName: 'Scatterplot Radius',\n      type: 'range',\n      value: 5,\n      step: 1,\n      min: 0,\n      max: 10\n    },\n    // showScatterplot: {\n    //   displayName: 'Show Scatterplot',\n    //   type: 'boolean',\n    //   value: false\n    // }\n};\n\nexport class LayerControls extends Component {\n\n    _onValueChange(settingName, newValue) {\n      const { settings } = this.props;\n      // Only update if we have a confirmed change\n      if (settings[settingName] !== newValue) {\n        // Create a new object so that shallow-equal detects a change\n        const newSettings = {\n          ...this.props.settings,\n          [settingName]: newValue\n        };\n  \n        this.props.onChange(newSettings);\n      }\n    }\n  \n    render() {\n      const { title, settings, propTypes = {} } = this.props;\n  \n      return (\n        <div className=\"layer-controls\" style={layerControl}>\n          {title && <h4>{title}</h4>}\n          {Object.keys(settings).map(key => (\n            <div key={key}>\n              <label>{propTypes[key].displayName}</label>\n              <div style={{ display: 'inline-block', float: 'right' }}>\n                {settings[key]}\n              </div>\n              <Setting\n                settingName={key}\n                value={settings[key]}\n                propType={propTypes[key]}\n                onChange={this._onValueChange.bind(this)}\n              />\n            </div>\n          ))}\n        </div>\n      );\n    }\n}\n\nconst Setting = props => {\n    const { propType } = props;\n    if (propType && propType.type) {\n      switch (propType.type) {\n        case 'range':\n          return <Slider {...props} />;\n  \n        case 'boolean':\n          return <Checkbox {...props} />;\n        default:\n          return <input {...props} />;\n      }\n    }\n};\n\nconst Checkbox = ({ settingName, value, onChange }) => {\n    return (\n      <div key={settingName}>\n        <div className=\"input-group\">\n          <input\n            type=\"checkbox\"\n            id={settingName}\n            checked={value}\n            onChange={e => onChange(settingName, e.target.checked)}\n          />\n        </div>\n      </div>\n    );\n  };\n  \n  const Slider = ({ settingName, value, propType, onChange }) => {\n    const { max = 100 } = propType;\n  \n    return (\n      <div key={settingName}>\n        <div className=\"input-group\">\n          <div>\n            <input\n              type=\"range\"\n              id={settingName}\n              min={0}\n              max={max}\n              step={max / 100}\n              value={value}\n              onChange={e => onChange(settingName, Number(e.target.value))}\n            />\n          </div>\n        </div>\n      </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}