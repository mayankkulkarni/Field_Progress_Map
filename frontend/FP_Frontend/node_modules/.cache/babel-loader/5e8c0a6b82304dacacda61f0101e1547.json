{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nvar defaultStyle = {\n  zIndex: 1,\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: 0,\n  left: 0,\n  display: 'none'\n};\n\nvar Tooltip = function () {\n  function Tooltip(canvas) {\n    _classCallCheck(this, Tooltip);\n\n    var canvasParent = canvas.parentElement;\n\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n  }\n\n  _createClass(Tooltip, [{\n    key: \"setTooltip\",\n    value: function setTooltip(displayInfo, x, y) {\n      var el = this.el;\n\n      if (typeof displayInfo === 'string') {\n        el.innerText = displayInfo;\n      } else if (!displayInfo) {\n        el.style.display = 'none';\n        return;\n      } else {\n        if ('text' in displayInfo) {\n          el.innerText = displayInfo.text;\n        }\n\n        if ('html' in displayInfo) {\n          el.innerHTML = displayInfo.html;\n        }\n\n        if ('className' in displayInfo) {\n          el.className = displayInfo.className;\n        }\n\n        Object.assign(el.style, displayInfo.style);\n      }\n\n      el.style.display = 'block';\n      el.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.el) {\n        this.el.remove();\n      }\n    }\n  }]);\n\n  return Tooltip;\n}();\n\nexport { Tooltip as default };","map":null,"metadata":{},"sourceType":"module"}