{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assert from '../utils/assert';\nexport function getTransferList(object) {\n  var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var transfers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  if (!object) {} else if (object instanceof ArrayBuffer) {\n    transfers.push(object);\n  } else if (object.buffer && object.buffer instanceof ArrayBuffer) {\n    transfers.push(object.buffer);\n  } else if (recursive && _typeof(object) === 'object') {\n    for (var key in object) {\n      getTransferList(object[key], recursive, transfers);\n    }\n  }\n\n  return transfers;\n}\nvar workerURLCache = new Map();\nexport function getWorkerURL(workerSource) {\n  assert(typeof workerSource === 'string', 'worker source');\n\n  if (workerSource.startsWith('url(') && workerSource.endsWith(')')) {\n    return workerSource.match(/^url\\((.*)\\)$/)[1];\n  }\n\n  var workerURL = workerURLCache.get(workerSource);\n\n  if (!workerURL) {\n    var blob = new Blob([workerSource], {\n      type: 'application/javascript'\n    });\n    workerURL = URL.createObjectURL(blob);\n    workerURLCache.set(workerSource, workerURL);\n  }\n\n  return workerURL;\n}","map":null,"metadata":{},"sourceType":"module"}