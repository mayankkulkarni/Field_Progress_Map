{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport KHR_draco_mesh_compression from './KHR_draco_mesh_compression';\nimport KHR_lights_punctual from './KHR_lights_punctual';\nexport var EXTENSIONS = {\n  KHR_draco_mesh_compression: KHR_draco_mesh_compression,\n  KHR_lights_punctual: KHR_lights_punctual\n};\nexport function decodeExtensions(_x, _x2) {\n  return _decodeExtensions.apply(this, arguments);\n}\n\nfunction _decodeExtensions() {\n  _decodeExtensions = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(gltf, options) {\n    var extensionName, disableExtension, extension;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = _regeneratorRuntime.keys(EXTENSIONS);\n\n          case 1:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 10;\n              break;\n            }\n\n            extensionName = _context.t1.value;\n            disableExtension = extensionName in options && !options[extensionName];\n\n            if (disableExtension) {\n              _context.next = 8;\n              break;\n            }\n\n            extension = EXTENSIONS[extensionName];\n            _context.next = 8;\n            return extension.decode(gltf, options);\n\n          case 8:\n            _context.next = 1;\n            break;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _decodeExtensions.apply(this, arguments);\n}\n\nexport function decodeExtensionsSync(gltf, options) {\n  for (var extensionName in EXTENSIONS) {\n    var disableExtension = extensionName in options && !options[extensionName];\n\n    if (!disableExtension) {\n      var extension = EXTENSIONS[extensionName];\n      extension.decodeSync(gltf, options);\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}