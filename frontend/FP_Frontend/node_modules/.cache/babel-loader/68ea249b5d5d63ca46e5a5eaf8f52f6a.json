{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nexport var KeyFrames = function () {\n  function KeyFrames(keyFrames) {\n    _classCallCheck(this, KeyFrames);\n\n    this._lastTime = -1;\n    this.startIndex = -1;\n    this.endIndex = -1;\n    this.factor = 0;\n    this.times = [];\n    this.values = [];\n    this.setKeyFrames(keyFrames);\n    this.setTime(0);\n  }\n\n  _createClass(KeyFrames, [{\n    key: \"setKeyFrames\",\n    value: function setKeyFrames(keyFrames) {\n      var numKeys = keyFrames.length;\n      this.times.length = numKeys;\n      this.values.length = numKeys;\n\n      for (var i = 0; i < numKeys; ++i) {\n        this.times[i] = keyFrames[i][0];\n        this.values[i] = keyFrames[i][1];\n      }\n\n      this._calculateKeys(this._lastTime);\n    }\n  }, {\n    key: \"setTime\",\n    value: function setTime(time) {\n      time = Math.max(0, time);\n\n      if (time !== this._lastTime) {\n        this._calculateKeys(time);\n\n        this._lastTime = time;\n      }\n    }\n  }, {\n    key: \"getStartTime\",\n    value: function getStartTime() {\n      return this.times[this.startIndex];\n    }\n  }, {\n    key: \"getEndTime\",\n    value: function getEndTime() {\n      return this.times[this.endIndex];\n    }\n  }, {\n    key: \"getStartData\",\n    value: function getStartData() {\n      return this.values[this.startIndex];\n    }\n  }, {\n    key: \"getEndData\",\n    value: function getEndData() {\n      return this.values[this.endIndex];\n    }\n  }, {\n    key: \"_calculateKeys\",\n    value: function _calculateKeys(time) {\n      var index = 0;\n      var numKeys = this.times.length;\n\n      for (index = 0; index < numKeys - 2; ++index) {\n        if (this.times[index + 1] > time) {\n          break;\n        }\n      }\n\n      this.startIndex = index;\n      this.endIndex = index + 1;\n      var startTime = this.times[this.startIndex];\n      var endTime = this.times[this.endIndex];\n      this.factor = Math.min(Math.max(0, (time - startTime) / (endTime - startTime)), 1);\n    }\n  }]);\n\n  return KeyFrames;\n}();","map":null,"metadata":{},"sourceType":"module"}