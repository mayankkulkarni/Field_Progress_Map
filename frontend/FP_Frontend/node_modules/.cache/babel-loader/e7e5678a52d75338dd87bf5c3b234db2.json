{"ast":null,"code":"import _defineProperty from \"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/src/Components/Map/Map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport DeckGL from '@deck.gl/react';\nimport { LineLayer, GeoJsonLayer, ScatterplotLayer, PolygonLayer } from '@deck.gl/layers';\nimport { StaticMap } from \"react-map-gl\";\nimport ReactMapGL from \"react-map-gl\";\nimport { MapView, View } from '@deck.gl/core';\nimport { scaleThreshold } from 'd3-scale'; // github example\n\nimport \"./Map.css\";\nimport { LayerControls, SCATTERPLOT_CONTROLS } from './controls';\nimport Precinct from '../../precinct.json';\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoidWJhY2hyaXMiLCJhIjoiY2sxYjczdWhpMGZuMzNjb2I5OGlqb3gwaCJ9.iLrtxaVXfhsJM0iyWwdQ5Q';\nconst mapStyle = \"mapbox://styles/mapbox/outdoors-v11\"; // Information from the github deckGL geoGSON example \n\nconst DATA_URL = 'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/geojson/vancouver-blocks.json'; // eslint-disable-line\n\nexport const COLOR_SCALE = scaleThreshold().domain([-0.6, -0.45, -0.3, -0.15, 0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05, 1.2]).range([[65, 182, 196], [127, 205, 187], [199, 233, 180], [237, 248, 177], // zero\n[255, 255, 204], [255, 237, 160], [254, 217, 118], [254, 178, 76], [253, 141, 60], [252, 78, 42], [227, 26, 28], [189, 0, 38], [128, 0, 38]]); // end of info \n\nconst initialViewState = {\n  // latitude: 49.254,\n  // longitude: -123.13,\n  latitude: 32.92,\n  //SAN DIEGO\n  longitude: -117.135,\n  zoom: 14,\n  pitch: 0,\n  bearing: 0\n}; // console.log(precinctData)\n\nconst geoJsonData = {\n  \"type\": \"FeatureCollection\",\n  \"features\": [{\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.131861, 32.920173]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 3,\n      \"Address\": \"8990 BRENTFORD AVE\",\n      \"Name\": \"Lavinnia  Sweigart\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.133607, 32.920137]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 4,\n      \"Address\": \"8880 BRENTFORD AVE\",\n      \"Name\": \"Mercedese Irmgard Thero\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.132555, 32.920159]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 1,\n      \"Address\": \"8950 BRENTFORD AVE\",\n      \"Name\": \"Denkevitz  Rener\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.132507, 32.920452]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 1,\n      \"Address\": \"8969 LIBRA DR\",\n      \"Name\": \"Assent  Gantvoort\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.132834, 32.920445]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 1,\n      \"Address\": \"8953 LIBRA DR\",\n      \"Name\": \"Keuna  Malmgren\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.13517, 32.920105]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 0,\n      \"Address\": \"8776 BRENTFORD AVE\",\n      \"Name\": \"Jimyah  Wokwicz\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.133653, 32.920426]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 4,\n      \"Address\": \"8921 LIBRA DR\",\n      \"Name\": \"Cannette  Mahalick\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.134128, 32.920126]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 2,\n      \"Address\": \"8850 BRENTFORD AVE\",\n      \"Name\": \"Liliya  Rallison\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.13267, 32.920449]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 1,\n      \"Address\": \"8961 LIBRA DR\",\n      \"Name\": \"Fugate  Standerwick\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.133607, 32.920137]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 4,\n      \"Address\": \"8880 BRENTFORD AVE\",\n      \"Name\": \"Yeicob  Domingues\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.135138, 32.920393]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 0,\n      \"Address\": \"8777 LIBRA DR\",\n      \"Name\": \"Nayya  Drouillard\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.134475, 32.920407]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 5,\n      \"Address\": \"8845 LIBRA DR\",\n      \"Name\": \"Tammeka  Piazza\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.133953, 32.920131]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 2,\n      \"Address\": \"8860 BRENTFORD AVE\",\n      \"Name\": \"Quintoria  Reigle\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.135002, 32.920108]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 0,\n      \"Address\": \"8786 BRENTFORD AVE\",\n      \"Name\": \"D\\u017eemila  Denny\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.13267, 32.920449]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 1,\n      \"Address\": \"8961 LIBRA DR\",\n      \"Name\": \"Erlon  Willison\",\n      \"zipcode\": 130960\n    }\n  }, {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-117.133256, 32.920144]\n    },\n    \"type\": \"Feature\",\n    \"properties\": {\n      \"cluster\": 6,\n      \"Address\": \"8910 BRENTFORD AVE\",\n      \"Name\": \"Vedvit  Swerdlow\",\n      \"zipcode\": 130960\n    }\n  }]\n};\nconst tooltipStyle = {\n  position: 'absolute',\n  padding: '4px',\n  background: 'rgba(0, 0, 0, 0.8)',\n  color: '#fff',\n  maxWidth: '300px',\n  fontSize: '10px',\n  zIndex: 9,\n  pointerEvents: 'none'\n};\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hover: {\n        x: 0,\n        y: 0,\n        hoveredObject: null\n      },\n      settings: Object.keys(SCATTERPLOT_CONTROLS).reduce((accu, key) => _objectSpread({}, accu, {\n        [key]: SCATTERPLOT_CONTROLS[key].value\n      }), {}),\n      points: []\n    };\n\n    this._onHover = ({\n      x,\n      y,\n      object\n    }) => {\n      const properties = object ? object.properties : null;\n\n      if (object) {\n        this.setState({\n          hover: {\n            x: object.geometry.coordinates[0],\n            y: object.geometry.coordinates[1],\n            hoveredObject: properties\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._processData();\n  }\n\n  _processData() {\n    const points = geoJsonData.features;\n    console.log(points);\n    this.setState({\n      points\n    });\n  }\n\n  _renderTooltip(left) {\n    const hover = this.state.hover;\n    return hover.hoveredObject && React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        zIndex: 1,\n        pointerEvents: 'none',\n        padding: '8px',\n        background: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fontSize: '15px',\n        left: left,\n        top: \"7.3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Cluster\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, hover.hoveredObject.cluster)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Name\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, hover.hoveredObject.Name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Location\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, hover.hoveredObject.Address));\n  }\n\n  _updateLayerSettings(settings) {\n    this.setState({\n      settings\n    });\n  }\n\n  _renderLayers() {\n    const data = this.state.points;\n    const settings = this.state.settings;\n    return [// only needed when using shadows - a plane for shadows to drop on\n    // new PolygonLayer({\n    //   id: 'polygon-layer',\n    //   precinctCoord,\n    //   pickable: true,\n    //   stroked: true,\n    //   filled: true,\n    //   wireframe: true,\n    //   lineWidthMinPixels: 1,\n    //   getPolygon: d => d,\n    //   getLineColor: [80, 80, 80],\n    //   getFillColor: [80, 80, 80],\n    //   getLineWidth: 250,\n    // }),\n    new ScatterplotLayer(_objectSpread({\n      id: 'scatterplot',\n      getPosition: d => d.geometry.coordinates,\n      getColor: d => COLOR_SCALE(d.properties.cluster),\n      getRadius: d => 5,\n      opacity: 0.9,\n      pickable: true,\n      radiusMinPixels: 0.25,\n      radiusMaxPixels: 30,\n      data,\n      onHover: this._onHover\n    }, settings)), new GeoJsonLayer({\n      id: 'geojson-layer',\n      data: Precinct,\n      opacity: 0.1,\n      pickable: false,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      lineWidthScale: 200,\n      lineWidthMinPixels: 2,\n      getFillColor: [160, 160, 180, 200],\n      getLineColor: [127, 205, 187],\n      getRadius: 100,\n      getLineWidth: 100,\n      getElevation: 30 // onHover: this._onHover\n\n    })];\n  }\n\n  render() {\n    let left = \"0%\";\n\n    if (this.props.display === false) {\n      left = \"20%\";\n    }\n\n    const hover = this.state.hover;\n    console.log(hover);\n    console.log(hover.hoveredObject);\n    return React.createElement(React.Fragment, null, React.createElement(LayerControls, {\n      settings: this.state.settings,\n      propTypes: SCATTERPLOT_CONTROLS,\n      onChange: settings => this._updateLayerSettings(settings),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(DeckGL, {\n      layers: this._renderLayers(),\n      initialViewState: initialViewState,\n      style: {\n        top: \"7.3%\",\n        left: left\n      },\n      views: new MapView({\n        height: '100%',\n        width: '100%',\n        clear: true,\n        controller: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(StaticMap, {\n      style: {\n        top: \"7.3%\",\n        left: left\n      },\n      reuseMaps: true,\n      mapStyle: mapStyle,\n      preventStyleDiffing: true,\n      mapboxApiAccessToken: MAPBOX_ACCESS_TOKEN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), this._renderTooltip(left)));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/ucheuba/Downloads/backend/frontend/FP_Frontend/src/Components/Map/Map.js"],"names":["React","DeckGL","LineLayer","GeoJsonLayer","ScatterplotLayer","PolygonLayer","StaticMap","ReactMapGL","MapView","View","scaleThreshold","LayerControls","SCATTERPLOT_CONTROLS","Precinct","MAPBOX_ACCESS_TOKEN","mapStyle","DATA_URL","COLOR_SCALE","domain","range","initialViewState","latitude","longitude","zoom","pitch","bearing","geoJsonData","tooltipStyle","position","padding","background","color","maxWidth","fontSize","zIndex","pointerEvents","Map","Component","state","hover","x","y","hoveredObject","settings","Object","keys","reduce","accu","key","value","points","_onHover","object","properties","setState","geometry","coordinates","componentDidMount","_processData","features","console","log","_renderTooltip","left","top","cluster","Name","Address","_updateLayerSettings","_renderLayers","data","id","getPosition","d","getColor","getRadius","opacity","pickable","radiusMinPixels","radiusMaxPixels","onHover","stroked","filled","extruded","lineWidthScale","lineWidthMinPixels","getFillColor","getLineColor","getLineWidth","getElevation","render","props","display","height","width","clear","controller"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {LineLayer, GeoJsonLayer, ScatterplotLayer, PolygonLayer} from '@deck.gl/layers';\nimport {StaticMap} from \"react-map-gl\";\nimport ReactMapGL from \"react-map-gl\";\nimport {MapView, View} from '@deck.gl/core';\nimport {scaleThreshold} from 'd3-scale';     // github example\nimport \"./Map.css\"\nimport { LayerControls, SCATTERPLOT_CONTROLS } from './controls';\nimport Precinct from '../../precinct.json'\n\n\nconst MAPBOX_ACCESS_TOKEN= 'pk.eyJ1IjoidWJhY2hyaXMiLCJhIjoiY2sxYjczdWhpMGZuMzNjb2I5OGlqb3gwaCJ9.iLrtxaVXfhsJM0iyWwdQ5Q'\nconst mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n\n// Information from the github deckGL geoGSON example \nconst DATA_URL = 'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/geojson/vancouver-blocks.json'; // eslint-disable-line\n\nexport const COLOR_SCALE = scaleThreshold()\n  .domain([-0.6, -0.45, -0.3, -0.15, 0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05, 1.2])\n  .range([\n    [65, 182, 196],\n    [127, 205, 187],\n    [199, 233, 180],\n    [237, 248, 177],\n    // zero\n    [255, 255, 204],\n    [255, 237, 160],\n    [254, 217, 118],\n    [254, 178, 76],\n    [253, 141, 60],\n    [252, 78, 42],\n    [227, 26, 28],\n    [189, 0, 38],\n    [128, 0, 38]\n  ]);\n\n// end of info \n\nconst initialViewState = {\n    // latitude: 49.254,\n    // longitude: -123.13,\n    latitude: 32.92,   //SAN DIEGO\n    longitude: -117.135,\n    zoom: 14,\n    pitch: 0,\n    bearing: 0\n};\n\n\n// console.log(precinctData)\n\nconst geoJsonData = {\"type\": \"FeatureCollection\", \"features\": [\n  {\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.131861, 32.920173]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 3, \"Address\": \"8990 BRENTFORD AVE\", \"Name\": \"Lavinnia  Sweigart\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133607, 32.920137]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 4, \"Address\": \"8880 BRENTFORD AVE\", \"Name\": \"Mercedese Irmgard Thero\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.132555, 32.920159]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8950 BRENTFORD AVE\", \"Name\": \"Denkevitz  Rener\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.132507, 32.920452]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8969 LIBRA DR\", \"Name\": \"Assent  Gantvoort\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.132834, 32.920445]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8953 LIBRA DR\", \"Name\": \"Keuna  Malmgren\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.13517, 32.920105]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 0, \"Address\": \"8776 BRENTFORD AVE\", \"Name\": \"Jimyah  Wokwicz\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133653, 32.920426]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 4, \"Address\": \"8921 LIBRA DR\", \"Name\": \"Cannette  Mahalick\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.134128, 32.920126]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 2, \"Address\": \"8850 BRENTFORD AVE\", \"Name\": \"Liliya  Rallison\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.13267, 32.920449]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8961 LIBRA DR\", \"Name\": \"Fugate  Standerwick\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133607, 32.920137]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 4, \"Address\": \"8880 BRENTFORD AVE\", \"Name\": \"Yeicob  Domingues\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.135138, 32.920393]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 0, \"Address\": \"8777 LIBRA DR\", \"Name\": \"Nayya  Drouillard\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.134475, 32.920407]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 5, \"Address\": \"8845 LIBRA DR\", \"Name\": \"Tammeka  Piazza\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133953, 32.920131]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 2, \"Address\": \"8860 BRENTFORD AVE\", \"Name\": \"Quintoria  Reigle\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.135002, 32.920108]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 0, \"Address\": \"8786 BRENTFORD AVE\", \"Name\": \"D\\u017eemila  Denny\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.13267, 32.920449]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 1, \"Address\": \"8961 LIBRA DR\", \"Name\": \"Erlon  Willison\", \"zipcode\": 130960}}\n  ,{\"geometry\": {\"type\": \"Point\", \"coordinates\": [-117.133256, 32.920144]}, \"type\": \"Feature\", \"properties\": {\"cluster\": 6, \"Address\": \"8910 BRENTFORD AVE\", \"Name\": \"Vedvit  Swerdlow\", \"zipcode\": 130960}}\n  ]}\n\nconst tooltipStyle = {\n  position: 'absolute',\n  padding: '4px',\n  background: 'rgba(0, 0, 0, 0.8)',\n  color: '#fff',\n  maxWidth: '300px',\n  fontSize: '10px',\n  zIndex: 9,\n  pointerEvents: 'none'\n};\n\n\nclass Map extends React.Component {\n\n    state = {\n      hover: {\n        x:0,\n        y:0,\n        hoveredObject: null\n      },\n      settings: Object.keys(SCATTERPLOT_CONTROLS).reduce(\n        (accu, key) => ({\n          ...accu,\n          [key]: SCATTERPLOT_CONTROLS[key].value\n        }),\n        {}\n      ),\n      points: [],\n    }\n\n    componentDidMount() {\n      this._processData();\n    }\n\n    _processData() {\n      const points = geoJsonData.features;\n      console.log(points);\n      this.setState({points})\n    }\n\n    _onHover = ({ x, y, object }) => {\n      const properties = object ? object.properties : null;\n      \n      if(object){\n        this.setState({\n          hover: { \n           x: object.geometry.coordinates[0],\n           y: object.geometry.coordinates[1],\n           hoveredObject: properties\n          } \n       });\n      }\n      \n    }\n\n    _renderTooltip(left) {\n      const {hover} = this.state\n      return hover.hoveredObject && (\n        <div style={{position: 'absolute',\n         zIndex: 1, \n         pointerEvents: 'none',\n         padding: '8px',\n         background: 'rgba(0, 0, 0, 0.8)',\n         color: '#fff', \n         fontSize: '15px',\n         left: left, top: \"7.3%\"}}>\n          <div>\n              <b>Cluster</b>\n              </div>\n              <div>\n                <div>{hover.hoveredObject.cluster}</div>\n              </div>\n              <div>\n                <b>Name</b>\n              </div>\n              <div>{hover.hoveredObject.Name}</div>\n              <div>\n                <b>Location</b>\n              </div>\n              <div>{hover.hoveredObject.Address}</div>\n        </div>\n      );\n    }\n\n    _updateLayerSettings(settings){\n      this.setState({settings});\n    }\n\n\n    _renderLayers() {\n      const data = this.state.points;\n      const settings = this.state.settings\n      \n\n      return [\n        // only needed when using shadows - a plane for shadows to drop on\n        // new PolygonLayer({\n        //   id: 'polygon-layer',\n        //   precinctCoord,\n        //   pickable: true,\n        //   stroked: true,\n        //   filled: true,\n        //   wireframe: true,\n        //   lineWidthMinPixels: 1,\n        //   getPolygon: d => d,\n        //   getLineColor: [80, 80, 80],\n        //   getFillColor: [80, 80, 80],\n        //   getLineWidth: 250,\n        // }),\n        new ScatterplotLayer({\n          id: 'scatterplot',\n          getPosition: d => d.geometry.coordinates,\n          getColor: d => COLOR_SCALE(d.properties.cluster),\n          getRadius: d => 5,\n          opacity: 0.9,\n          pickable: true,\n          radiusMinPixels: 0.25,\n          radiusMaxPixels: 30,\n          data,\n          onHover: this._onHover,\n          ...settings\n        }),\n        new GeoJsonLayer({\n          id: 'geojson-layer',\n          data: Precinct,\n          opacity: 0.1,\n          pickable: false,\n          stroked: false,\n          filled: true,\n          extruded: true,\n          lineWidthScale: 200,\n          lineWidthMinPixels: 2,\n          getFillColor: [160, 160, 180, 200],\n          getLineColor: [127, 205, 187],\n          getRadius: 100,\n          getLineWidth: 100,\n          getElevation: 30,\n          // onHover: this._onHover\n        }),\n      ];\n    }\n\n    render() {\n      let left = \"0%\"\n      if(this.props.display === false){\n        left = \"20%\"\n      }\n      const {hover} = this.state\n      console.log(hover)\n      console.log(hover.hoveredObject);\n    \n        return (   \n          <>\n            <LayerControls\n            settings={this.state.settings}\n            propTypes={SCATTERPLOT_CONTROLS}\n            onChange={settings => this._updateLayerSettings(settings)}\n            />\n            <DeckGL\n            layers={this._renderLayers()}\n            initialViewState={initialViewState}\n            style={{top:\"7.3%\", left:left}}\n            views={ new MapView({\n                height: '100%',\n                width: '100%',\n                clear: true,\n                controller: true\n            })}\n            >\n              <StaticMap\n              style={{top:\"7.3%\", left:left}}\n              reuseMaps\n              mapStyle={mapStyle}\n              preventStyleDiffing={true}\n              mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n              />\n              { this._renderTooltip(left) }\n            </DeckGL>\n          </>\n\n          );\n    }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}