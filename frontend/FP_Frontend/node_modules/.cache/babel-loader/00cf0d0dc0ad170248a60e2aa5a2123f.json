{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { Texture2D, TextureCube } from '@luma.gl/core';\nimport { loadImage } from '@loaders.gl/images';\n\nvar GLTFEnvironment = function () {\n  function GLTFEnvironment(gl, _ref) {\n    var brdfLutUrl = _ref.brdfLutUrl,\n        getTexUrl = _ref.getTexUrl,\n        _ref$specularMipLevel = _ref.specularMipLevels,\n        specularMipLevels = _ref$specularMipLevel === void 0 ? 10 : _ref$specularMipLevel;\n\n    _classCallCheck(this, GLTFEnvironment);\n\n    this.gl = gl;\n    this.brdfLutUrl = brdfLutUrl;\n    this.getTexUrl = getTexUrl;\n    this.specularMipLevels = specularMipLevels;\n  }\n\n  _createClass(GLTFEnvironment, [{\n    key: \"makeCube\",\n    value: function makeCube(_ref2) {\n      var id = _ref2.id,\n          getTextureForFace = _ref2.getTextureForFace,\n          parameters = _ref2.parameters;\n      var pixels = {};\n      TextureCube.FACES.forEach(function (face) {\n        pixels[face] = getTextureForFace(face);\n      });\n      return new TextureCube(this.gl, {\n        id: id,\n        mipmaps: false,\n        parameters: parameters,\n        pixels: pixels\n      });\n    }\n  }, {\n    key: \"getDiffuseEnvSampler\",\n    value: function getDiffuseEnvSampler() {\n      var _this = this;\n\n      if (!this._DiffuseEnvSampler) {\n        var _parameters;\n\n        this._DiffuseEnvSampler = this.makeCube({\n          id: 'DiffuseEnvSampler',\n          getTextureForFace: function getTextureForFace(dir) {\n            return loadImage(_this.getTexUrl('diffuse', dir, 0));\n          },\n          parameters: (_parameters = {}, _defineProperty(_parameters, 10242, 33071), _defineProperty(_parameters, 10243, 33071), _defineProperty(_parameters, 10241, 9729), _defineProperty(_parameters, 10240, 9729), _parameters)\n        });\n      }\n\n      return this._DiffuseEnvSampler;\n    }\n  }, {\n    key: \"getSpecularEnvSampler\",\n    value: function getSpecularEnvSampler() {\n      var _this2 = this;\n\n      if (!this._SpecularEnvSampler) {\n        var _parameters2;\n\n        this._SpecularEnvSampler = this.makeCube({\n          id: 'SpecularEnvSampler',\n          getTextureForFace: function getTextureForFace(dir) {\n            var imageArray = [];\n\n            for (var lod = 0; lod <= _this2.specularMipLevels - 1; lod++) {\n              imageArray.push(loadImage(_this2.getTexUrl('specular', dir, lod)));\n            }\n\n            return imageArray;\n          },\n          parameters: (_parameters2 = {}, _defineProperty(_parameters2, 10242, 33071), _defineProperty(_parameters2, 10243, 33071), _defineProperty(_parameters2, 10241, 9987), _defineProperty(_parameters2, 10240, 9729), _parameters2)\n        });\n      }\n\n      return this._SpecularEnvSampler;\n    }\n  }, {\n    key: \"getBrdfTexture\",\n    value: function getBrdfTexture() {\n      if (!this._BrdfTexture) {\n        var _parameters3;\n\n        this._BrdfTexture = new Texture2D(this.gl, {\n          id: 'brdfLUT',\n          parameters: (_parameters3 = {}, _defineProperty(_parameters3, 10242, 33071), _defineProperty(_parameters3, 10243, 33071), _defineProperty(_parameters3, 10241, 9729), _defineProperty(_parameters3, 10240, 9729), _parameters3),\n          pixelStore: _defineProperty({}, this.gl.UNPACK_FLIP_Y_WEBGL, false),\n          data: loadImage(this.brdfLutUrl)\n        });\n      }\n\n      return this._BrdfTexture;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      if (this._DiffuseEnvSampler) {\n        this._DiffuseEnvSampler[\"delete\"]();\n\n        this._DiffuseEnvSampler = null;\n      }\n\n      if (this._SpecularEnvSampler) {\n        this._SpecularEnvSampler[\"delete\"]();\n\n        this._SpecularEnvSampler = null;\n      }\n\n      if (this._BrdfTexture) {\n        this._BrdfTexture[\"delete\"]();\n\n        this._BrdfTexture = null;\n      }\n    }\n  }]);\n\n  return GLTFEnvironment;\n}();\n\nexport { GLTFEnvironment as default };","map":null,"metadata":{},"sourceType":"module"}