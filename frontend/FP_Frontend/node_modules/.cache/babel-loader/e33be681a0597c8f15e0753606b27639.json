{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { isFileReadable } from '../../javascript-utils/is-type';\nimport { resolvePath } from './file-aliases';\nimport fetchFileReadable from './fetch-file.browser';\nexport function fetchFile(_x, _x2) {\n  return _fetchFile.apply(this, arguments);\n}\n\nfunction _fetchFile() {\n  _fetchFile = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(url, options) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isFileReadable(url)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", fetchFileReadable(url, options));\n\n          case 2:\n            url = resolvePath(url);\n            return _context.abrupt(\"return\", fetch(url, options));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchFile.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}