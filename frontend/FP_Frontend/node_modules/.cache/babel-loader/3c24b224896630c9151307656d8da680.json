{"ast":null,"code":"import { copyPaddedStringToDataView, copyPaddedArrayBufferToDataView } from '@loaders.gl/loader-utils';\nvar MAGIC_glTF = 0x46546c67;\nvar MAGIC_JSON = 0x4e4f534a;\nvar MAGIC_BIN = 0x004e4942;\nvar LE = true;\nexport default function encodeGLBSync(glb, dataView) {\n  var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _glb$magic = glb.magic,\n      magic = _glb$magic === void 0 ? MAGIC_glTF : _glb$magic,\n      _glb$version = glb.version,\n      version = _glb$version === void 0 ? 2 : _glb$version,\n      _glb$json = glb.json,\n      json = _glb$json === void 0 ? {} : _glb$json,\n      binary = glb.binary;\n  var byteOffsetStart = byteOffset;\n\n  if (dataView) {\n    dataView.setUint32(byteOffset + 0, magic, LE);\n    dataView.setUint32(byteOffset + 4, version, LE);\n    dataView.setUint32(byteOffset + 8, 0, LE);\n  }\n\n  var byteOffsetFileLength = byteOffset + 8;\n  byteOffset += 12;\n  var byteOffsetJsonHeader = byteOffset;\n\n  if (dataView) {\n    dataView.setUint32(byteOffset + 0, 0, LE);\n    dataView.setUint32(byteOffset + 4, MAGIC_JSON, LE);\n  }\n\n  byteOffset += 8;\n  var jsonString = JSON.stringify(json);\n  byteOffset = copyPaddedStringToDataView(dataView, byteOffset, jsonString, 4);\n\n  if (dataView) {\n    var jsonByteLength = byteOffset - byteOffsetJsonHeader - 8;\n    dataView.setUint32(byteOffsetJsonHeader + 0, jsonByteLength, LE);\n  }\n\n  if (binary) {\n    var byteOffsetBinHeader = byteOffset;\n\n    if (dataView) {\n      dataView.setUint32(byteOffset + 0, 0, LE);\n      dataView.setUint32(byteOffset + 4, MAGIC_BIN, LE);\n    }\n\n    byteOffset += 8;\n    byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, binary, 4);\n\n    if (dataView) {\n      var binByteLength = byteOffset - byteOffsetBinHeader - 8;\n      dataView.setUint32(byteOffsetBinHeader + 0, binByteLength, LE);\n    }\n  }\n\n  if (dataView) {\n    var fileByteLength = byteOffset - byteOffsetStart;\n    dataView.setUint32(byteOffsetFileLength, fileByteLength, LE);\n  }\n\n  return byteOffset;\n}","map":null,"metadata":{},"sourceType":"module"}